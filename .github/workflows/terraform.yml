name: 'Terraform Deployment'

on:
  push:
    branches: [ "main" ]
    paths:
      - 'infrastructure/**'
      - '.github/workflows/**'
  pull_request:
    paths:
      - 'infrastructure/**'
      - '.github/workflows/**'

permissions:
  contents: read

jobs:
  terraform_deployment:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: infrastructure

    permissions:
      contents: read
      id-token: write # Require write permission to Fetch an Azure OIDC token.

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        sparse-checkout: |
          infrastructure

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Azure CLI Login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan -input=false
      env:
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        TF_VAR_group_members: ${{vars.TF_VAR_GROUP_MEMBERS}}
        TF_VAR_azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false
      env:
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        TF_VAR_group_members: ${{vars.TF_VAR_GROUP_MEMBERS}}
        TF_VAR_azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
