name: "Terraform Deployment"

on:
  push:
    branches: ["main"]
    paths:
      - "infrastructure/**"
      - ".github/workflows/**"
      - "code/**"
  pull_request:
    paths:
      - "infrastructure/**"
      - ".github/workflows/**"

permissions:
  contents: read

jobs:
  build_wheel:
    name: "Build Python Wheel"
    runs-on: ghcr.io/astral-sh/uv:python3.11-alpine
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            code

      - name: Detect code changes
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            code:
              - 'src/**'
              - "pyproject.toml"

      - name: Build wheel into infrastructure/libraries
        if: steps.changes.outputs.code == 'true'
        run: |
          cd code
          mkdir -p infrastructure/libraries
          uv build -o infrastructure/libraries

      - name: Upload wheel artifact
        if: steps.changes.outputs.code == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: python-wheel
          path: infrastructure/libraries/*.whl
          if-no-files-found: ignore

  deploy_databricks_workspace:
    name: "Create Databricks Workspace"
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: infrastructure

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            infrastructure

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -input=false -lock=false -target=module.resource_group -target=module.databricks_workspace
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          TF_VAR_group_members: ${{ vars.TF_VAR_GROUP_MEMBERS }}
          TF_VAR_azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}

      - name: Apply only Databricks Workspace
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -target=module.resource_group -target=module.databricks_workspace
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          TF_VAR_group_members: ${{ vars.TF_VAR_GROUP_MEMBERS }}
          TF_VAR_azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}

  deploy_infrastructure:
    name: "Deploy Entire Infrastructure"
    runs-on: ubuntu-latest
    needs: deploy_databricks_workspace
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: infrastructure

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            infrastructure

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -input=false -lock=false
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          TF_VAR_group_members: ${{ vars.TF_VAR_GROUP_MEMBERS }}
          TF_VAR_azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          TF_VAR_group_members: ${{ vars.TF_VAR_GROUP_MEMBERS }}
          TF_VAR_azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
